const ReviewsService = require('../services/ReviewsService');

class ReviewsController {
    constructor() {
        this.reviewsService = new ReviewsService();
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç GET –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤
     * @param {Object} request - –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞
     * @param {Object} response - –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞
     */
    async getReviews(request, response) {
        console.log('üì• –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ /get-reviews');
        console.log('Query params:', request.query);
        
        try {
            const { url } = this.extractQueryParams(request);
            console.log('üîó URL —Ç–æ–≤–∞—Ä–∞:', url);
            
            if (!this.isValidUrl(url)) {
                console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π URL —Ç–æ–≤–∞—Ä–∞');
                return this.sendErrorResponse(response, '–ù–µ–≤–µ—Ä–Ω—ã–π URL —Ç–æ–≤–∞—Ä–∞', 400);
            }

            console.log('‚úÖ URL –≤–∞–ª–∏–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥...');
            const reviews = await this.reviewsService.getReviews(url);
            console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${reviews.length}`);
            
            this.sendSuccessResponse(response, reviews);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ:', error);
            this.sendErrorResponse(response, error.message, 500);
        }
    }

    /**
     * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ query string
     * @param {Object} request - –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞
     * @returns {Object} –æ–±—ä–µ–∫—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
     */
    extractQueryParams(request) {
        return {
            url: request.query.url
        };
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL
     * @param {string} url - URL —Ç–æ–≤–∞—Ä–∞
     * @returns {boolean} —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     */
    isValidUrl(url) {
        if (!url || typeof url !== 'string') {
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–∏–Ω –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
        return url.includes('wildberries.ru') || 
               url.includes('wb.ru') || 
               url.includes('ozon.ru');
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
     * @param {Object} response - –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞
     * @param {Array} data - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
     */
    sendSuccessResponse(response, data) {
        response.json({
            success: true,
            data: data
        });
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π
     * @param {Object} response - –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞
     * @param {string} message - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     * @param {number} statusCode - –∫–æ–¥ —Å—Ç–∞—Ç—É—Å–∞
     */
    sendErrorResponse(response, message, statusCode = 500) {
        console.error('Reviews controller error:', message);
        response.status(statusCode).json({
            success: false,
            error: message
        });
    }
}

module.exports = ReviewsController;
