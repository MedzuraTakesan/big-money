const { browserManager } = require('../modules/market/helpers/parser/browser-manager');

class ReviewsService {
    constructor() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π browser-manager
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –ø–æ URL
     * @param {string} url - URL —Ç–æ–≤–∞—Ä–∞
     * @returns {string} –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
     */
    detectMarketplace(url) {
        if (url.includes('wildberries.ru') || url.includes('wb.ru')) {
            return 'wildberries';
        } else if (url.includes('ozon.ru')) {
            return 'ozon';
        }
        throw new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å');
    }

    /**
     * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç URL —Ç–æ–≤–∞—Ä–∞ –≤ URL –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è Wildberries
     * @param {string} productUrl - URL —Ç–æ–≤–∞—Ä–∞
     * @returns {string} URL –æ—Ç–∑—ã–≤–æ–≤
     */
    getWildberriesReviewsUrl(productUrl) {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ URL
        const match = productUrl.match(/\/catalog\/(\d+)\//);
        if (!match) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ URL Wildberries');
        }
        const productId = match[1];
        return `https://www.wildberries.ru/catalog/${productId}/feedbacks`;
    }

    /**
     * –ü–∞—Ä—Å–∏—Ç –æ—Ç–∑—ã–≤—ã —Å Wildberries
     * @param {string} reviewsUrl - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç–∑—ã–≤–æ–≤
     * @returns {Array} –º–∞—Å—Å–∏–≤ –æ—Ç–∑—ã–≤–æ–≤
     */
    async parseWildberriesReviews(reviewsUrl) {
        const browser = await browserManager.getBrowser();
        const page = await browser.newPage();
        
        try {
            console.log(`–ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç–∑—ã–≤–æ–≤ Wildberries: ${reviewsUrl}`);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —á—Ç–æ –∏ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤
            await page.setViewport({ width: 1920, height: 1080 });
            await page.setUserAgent(
                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
            );

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–∫–∏ –¥–ª—è Wildberries (–µ—Å–ª–∏ –µ—Å—Ç—å)
            const { wildberries } = require('../modules/market/helpers/parser/constants.js');
            const parser = new (require('../modules/market/helpers/parser/index.js').Parser)({
                domain: wildberries.domain,
                waitUntil: wildberries.waitUntil,
                cookie: wildberries.cookie
            });
            
            if (parser.cookie.length) {
                await page.setCookie(...parser.cookie);
                console.log('üç™ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫—É–∫–∏ –¥–ª—è Wildberries');
            }

            // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è headless —Ä–µ–∂–∏–º–∞ (–∫–∞–∫ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤)
            await page.evaluateOnNewDocument(() => {
                // –≠–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä –¥–ª—è headless —Ä–µ–∂–∏–º–∞
                if (!Object.getOwnPropertyDescriptor(navigator, 'webdriver')) {
                    Object.defineProperty(navigator, 'webdriver', { get: () => undefined });
                }
                if (!Object.getOwnPropertyDescriptor(navigator, 'plugins')) {
                    Object.defineProperty(navigator, 'plugins', { get: () => [1, 2, 3, 4, 5] });
                }
                if (!Object.getOwnPropertyDescriptor(navigator, 'languages')) {
                    Object.defineProperty(navigator, 'languages', { get: () => ['ru-RU', 'ru', 'en'] });
                }
                
                // –≠–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
                if (!Object.getOwnPropertyDescriptor(screen, 'width')) {
                    Object.defineProperty(screen, 'width', { get: () => 1920 });
                }
                if (!Object.getOwnPropertyDescriptor(screen, 'height')) {
                    Object.defineProperty(screen, 'height', { get: () => 1080 });
                }
                if (!Object.getOwnPropertyDescriptor(screen, 'availWidth')) {
                    Object.defineProperty(screen, 'availWidth', { get: () => 1920 });
                }
                if (!Object.getOwnPropertyDescriptor(screen, 'availHeight')) {
                    Object.defineProperty(screen, 'availHeight', { get: () => 1040 });
                }
                
                // –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –º—ã—à–∏ –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                window.addEventListener('scroll', () => {
                    // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                    const event = new Event('scroll', { bubbles: true });
                    window.dispatchEvent(event);
                });
            });

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –æ–∂–∏–¥–∞–Ω–∏—è –∫–∞–∫ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤
            await page.goto(reviewsUrl, {
                waitUntil: 'networkidle2',
                timeout: 12000
            });

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è Wildberries (–∫–∞–∫ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤)
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π URL –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const pageTitle = await page.title();
            const currentUrl = page.url();
            console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageTitle}`);
            console.log(`üîó –¢–µ–∫—É—â–∏–π URL: ${currentUrl}`);
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ª–µ–Ω–∏–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            await page.evaluate(() => {
                window.scrollTo(0, document.body.scrollHeight * 0.3);
            });
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const bodyText = await page.evaluate(() => document.body.innerText);
            console.log(`üìù –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${bodyText.length} —Å–∏–º–≤–æ–ª–æ–≤`);
            
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
            const reviews = await page.evaluate(() => {
                const reviews = [];
                
                // –ü–æ–ø—ã—Ç–∫–∞ 1: –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä
                let reviewElements = document.querySelectorAll('.comments__item.feedback');
                
                // –ü–æ–ø—ã—Ç–∫–∞ 2: –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
                if (reviewElements.length === 0) {
                    reviewElements = document.querySelectorAll('.feedback');
                }
                
                // –ü–æ–ø—ã—Ç–∫–∞ 3: –ø–æ–∏—Å–∫ –ø–æ –∫–ª–∞—Å—Å–∞–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º "feedback"
                if (reviewElements.length === 0) {
                    reviewElements = document.querySelectorAll('[class*="feedback"]');
                }
                
                // –ü–æ–ø—ã—Ç–∫–∞ 4: –ø–æ–∏—Å–∫ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –æ—Ç–∑—ã–≤–æ–≤
                if (reviewElements.length === 0) {
                    reviewElements = document.querySelectorAll('li[class*="comments"]');
                }
                
                console.log(`–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç–∑—ã–≤–æ–≤ Wildberries: ${reviewElements.length}`);
                
                reviewElements.forEach((element, index) => {
                    if (index >= 32) return; // –ú–∞–∫—Å–∏–º—É–º 32 –æ—Ç–∑—ã–≤–∞
                    
                    try {
                        let author = '–ê–Ω–æ–Ω–∏–º';
                        let text = '';
                        let rating = 0;
                        
                        // –ü–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –∞–≤—Ç–æ—Ä–∞
                        const authorSelectors = [
                            '.feedback__header',
                            '[class*="header"]',
                            '[class*="author"]',
                            '[class*="name"]',
                            '.feedback__author'
                        ];
                        
                        for (const selector of authorSelectors) {
                            const authorElement = element.querySelector(selector);
                            if (authorElement && authorElement.textContent.trim()) {
                                author = authorElement.textContent.trim();
                                break;
                            }
                        }
                        
                        // –ü–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
                        const textSelectors = [
                            '.feedback__text .feedback__text--item',
                            '.feedback__text',
                            '[class*="text"]',
                            '[class*="content"]',
                            'p',
                            'span'
                        ];
                        
                        for (const selector of textSelectors) {
                            const textElement = element.querySelector(selector);
                            if (textElement && textElement.textContent.trim()) {
                                const textContent = textElement.textContent.trim();
                                if (textContent.length > 10) { // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–∑—ã–≤–∞
                                    text = textContent;
                                    break;
                                }
                            }
                        }
                        
                        // –ü–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥
                        const ratingSelectors = [
                            '.feedback__rating',
                            '[class*="rating"]',
                            '[class*="star"]',
                            '.stars'
                        ];
                        
                        for (const selector of ratingSelectors) {
                            const ratingElement = element.querySelector(selector);
                            if (ratingElement) {
                                const ratingClass = ratingElement.className;
                                if (ratingClass.includes('star5')) rating = 5;
                                else if (ratingClass.includes('star4')) rating = 4;
                                else if (ratingClass.includes('star3')) rating = 3;
                                else if (ratingClass.includes('star2')) rating = 2;
                                else if (ratingClass.includes('star1')) rating = 1;
                                
                                if (rating > 0) break;
                            }
                        }
                        
                        if (text && text.length > 10) {
                            reviews.push({
                                author,
                                text,
                                rating
                            });
                        }
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–∑—ã–≤–∞ Wildberries:', error);
                    }
                });
                
                return reviews;
            });
            
            console.log(`–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤ —Å Wildberries: ${reviews.length}`);
            return reviews;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–∑—ã–≤–æ–≤ Wildberries:', error);
            return [];
        } finally {
            await page.close();
            browserManager.returnBrowser(browser);
        }
    }

    /**
     * –ü–∞—Ä—Å–∏—Ç –æ—Ç–∑—ã–≤—ã —Å Ozon
     * @param {string} productUrl - URL —Ç–æ–≤–∞—Ä–∞
     * @returns {Array} –º–∞—Å—Å–∏–≤ –æ—Ç–∑—ã–≤–æ–≤
     */
    async parseOzonReviews(productUrl) {
        const browser = await browserManager.getBrowser();
        const page = await browser.newPage();
        
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —á—Ç–æ –∏ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤
            await page.setViewport({ width: 1920, height: 1080 });
            await page.setUserAgent(
                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
            );

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–∫–∏ –¥–ª—è Ozon (–∫–∞–∫ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤)
            const { ozon } = require('../modules/market/helpers/parser/constants.js');
            const parser = new (require('../modules/market/helpers/parser/index.js').Parser)({
                domain: ozon.domain,
                waitUntil: ozon.waitUntil,
                cookie: ozon.cookie
            });
            
            if (parser.cookie.length) {
                await page.setCookie(...parser.cookie);
                console.log('üç™ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫—É–∫–∏ –¥–ª—è Ozon');
            }

            // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è headless —Ä–µ–∂–∏–º–∞ (–∫–∞–∫ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤)
            await page.evaluateOnNewDocument(() => {
                // –≠–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä –¥–ª—è headless —Ä–µ–∂–∏–º–∞
                if (!Object.getOwnPropertyDescriptor(navigator, 'webdriver')) {
                    Object.defineProperty(navigator, 'webdriver', { get: () => undefined });
                }
                if (!Object.getOwnPropertyDescriptor(navigator, 'plugins')) {
                    Object.defineProperty(navigator, 'plugins', { get: () => [1, 2, 3, 4, 5] });
                }
                if (!Object.getOwnPropertyDescriptor(navigator, 'languages')) {
                    Object.defineProperty(navigator, 'languages', { get: () => ['ru-RU', 'ru', 'en'] });
                }
                
                // –≠–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
                if (!Object.getOwnPropertyDescriptor(screen, 'width')) {
                    Object.defineProperty(screen, 'width', { get: () => 1920 });
                }
                if (!Object.getOwnPropertyDescriptor(screen, 'height')) {
                    Object.defineProperty(screen, 'height', { get: () => 1080 });
                }
                if (!Object.getOwnPropertyDescriptor(screen, 'availWidth')) {
                    Object.defineProperty(screen, 'availWidth', { get: () => 1920 });
                }
                if (!Object.getOwnPropertyDescriptor(screen, 'availHeight')) {
                    Object.defineProperty(screen, 'availHeight', { get: () => 1040 });
                }
                
                // –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –º—ã—à–∏ –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                window.addEventListener('scroll', () => {
                    // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                    const event = new Event('scroll', { bubbles: true });
                    window.dispatchEvent(event);
                });
            });

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –æ–∂–∏–¥–∞–Ω–∏—è –∫–∞–∫ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤
            await page.goto(productUrl, {
                waitUntil: 'domcontentloaded',
                timeout: 12000
            });

            // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è Ozon (–∫–∞–∫ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤)
            console.log('üîÑ –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è Ozon...');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π URL –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const pageTitle = await page.title();
            const currentUrl = page.url();
            console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageTitle}`);
            console.log(`üîó –¢–µ–∫—É—â–∏–π URL: ${currentUrl}`);
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è Ozon
            await page.evaluate(() => {
                // –≠–º—É–ª–∏—Ä—É–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const event = new Event('DOMContentLoaded', { bubbles: true });
                document.dispatchEvent(event);
                
                // –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –º—ã—à–∏
                const mouseEvent = new MouseEvent('mousemove', {
                    bubbles: true,
                    cancelable: true,
                    clientX: 100,
                    clientY: 100
                });
                document.dispatchEvent(mouseEvent);
                
                // –¢—Ä–∏–≥–≥–µ—Ä–∏–º –∑–∞–≥—Ä—É–∑–∫—É –ª–µ–Ω–∏–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                setTimeout(() => {
                    window.scrollTo(0, 100);
                    setTimeout(() => {
                        window.scrollTo(0, 0);
                    }, 100);
                }, 500);
            });
            
            // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            await new Promise(resolve => setTimeout(resolve, 2000));
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —ç–º—É–ª—è—Ü–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
            await page.mouse.move(100, 100);
            await page.mouse.wheel({ deltaY: 100 });
            await new Promise(resolve => setTimeout(resolve, 500));
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–æ–ª–ª –∫–∞–∫ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ç–æ–≤–∞—Ä–æ–≤
            console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥–≥—Ä—É–∑–∫—É –æ—Ç–∑—ã–≤–æ–≤...');
            
            // –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤
            await page.evaluate(() => {
                window.scrollTo(0, document.body.scrollHeight * 0.8);
            });
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            // –ï—â–µ –æ–¥–∏–Ω —Å–∫—Ä–æ–ª–ª –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            await page.evaluate(() => {
                window.scrollTo(0, document.body.scrollHeight);
            });
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –ª–∏ –Ω–∞—Å
            const bodyText = await page.evaluate(() => document.body.innerText);
            console.log(`üìù –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${bodyText.length} —Å–∏–º–≤–æ–ª–æ–≤`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–∏–∑–Ω–∞–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            if (bodyText.includes('–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω') || 
                bodyText.includes('Access denied') || 
                bodyText.includes('blocked') ||
                bodyText.includes('captcha') ||
                bodyText.length < 1000) {
                console.warn('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Ozon, –ø—Ä–æ–±—É–µ–º –æ–±–æ–π—Ç–∏...');
            }
            
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
            const reviews = await page.evaluate(() => {
                const reviews = [];
                
                // –ü–æ–ø—ã—Ç–∫–∞ 1: –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä
                let reviewElements = document.querySelectorAll('[data-review-uuid]');
                
                // –ü–æ–ø—ã—Ç–∫–∞ 2: –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
                if (reviewElements.length === 0) {
                    reviewElements = document.querySelectorAll('.vo7_30');
                }
                
                // –ü–æ–ø—ã—Ç–∫–∞ 3: –ø–æ–∏—Å–∫ –ø–æ –∫–ª–∞—Å—Å–∞–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º "review"
                if (reviewElements.length === 0) {
                    reviewElements = document.querySelectorAll('[class*="review"]');
                }
                
                // –ü–æ–ø—ã—Ç–∫–∞ 4: –ø–æ–∏—Å–∫ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –æ—Ç–∑—ã–≤–æ–≤
                if (reviewElements.length === 0) {
                    reviewElements = document.querySelectorAll('div[class*="vo7"]');
                }
                
                // –ü–æ–ø—ã—Ç–∫–∞ 5: –ø–æ–∏—Å–∫ –ø–æ –±–æ–ª–µ–µ –æ–±—â–∏–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
                if (reviewElements.length === 0) {
                    reviewElements = document.querySelectorAll('[class*="feedback"]');
                }
                
                console.log(`–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç–∑—ã–≤–æ–≤: ${reviewElements.length}`);
                
                reviewElements.forEach((element, index) => {
                    if (index >= 32) return; // –ú–∞–∫—Å–∏–º—É–º 32 –æ—Ç–∑—ã–≤–∞
                    
                    try {
                        let author = '–ê–Ω–æ–Ω–∏–º';
                        let text = '';
                        let rating = 0;
                        
                        // –ü–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –∞–≤—Ç–æ—Ä–∞
                        const authorSelectors = [
                            '.s2o_30',
                            '[class*="author"]',
                            '[class*="name"]',
                            'span[class*="s2"]',
                            '.feedback__author'
                        ];
                        
                        for (const selector of authorSelectors) {
                            const authorElement = element.querySelector(selector);
                            if (authorElement && authorElement.textContent.trim()) {
                                author = authorElement.textContent.trim();
                                break;
                            }
                        }
                        
                        // –ü–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
                        const textSelectors = [
                            '.v1o_30',
                            '[class*="text"]',
                            '[class*="content"]',
                            'p',
                            'span',
                            '.feedback__text'
                        ];
                        
                        for (const selector of textSelectors) {
                            const textElement = element.querySelector(selector);
                            if (textElement && textElement.textContent.trim()) {
                                const textContent = textElement.textContent.trim();
                                if (textContent.length > 10) { // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–∑—ã–≤–∞
                                    text = textContent;
                                    break;
                                }
                            }
                        }
                        
                        // –ü–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥
                        const ratingSelectors = [
                            '.v0o_30 svg[width="20"][height="20"]',
                            '[class*="rating"] svg',
                            '[class*="star"]',
                            'svg[width="20"][height="20"]',
                            '.feedback__rating'
                        ];
                        
                        for (const selector of ratingSelectors) {
                            const starElements = element.querySelectorAll(selector);
                            if (starElements.length > 0) {
                                rating = starElements.length;
                                break;
                            }
                        }
                        
                        // –ï—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –ø–æ –∫–ª–∞—Å—Å–∞–º
                        if (rating === 0) {
                            const ratingElement = element.querySelector('[class*="rating"]');
                            if (ratingElement) {
                                const className = ratingElement.className;
                                if (className.includes('star5')) rating = 5;
                                else if (className.includes('star4')) rating = 4;
                                else if (className.includes('star3')) rating = 3;
                                else if (className.includes('star2')) rating = 2;
                                else if (className.includes('star1')) rating = 1;
                            }
                        }
                        
                        if (text && text.length > 10) {
                            reviews.push({
                                author,
                                text,
                                rating
                            });
                        }
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–∑—ã–≤–∞:', error);
                    }
                });
                
                return reviews;
            });
            
            console.log(`–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤ —Å Ozon: ${reviews.length}`);
            return reviews;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–∑—ã–≤–æ–≤ Ozon:', error);
            return [];
        } finally {
            await page.close();
            browserManager.returnBrowser(browser);
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–∑—ã–≤—ã –ø–æ URL —Ç–æ–≤–∞—Ä–∞
     * @param {string} productUrl - URL —Ç–æ–≤–∞—Ä–∞
     * @returns {Array} –º–∞—Å—Å–∏–≤ –æ—Ç–∑—ã–≤–æ–≤
     */
    async getReviews(productUrl) {
        try {
            const marketplace = this.detectMarketplace(productUrl);
            
            if (marketplace === 'wildberries') {
                const reviewsUrl = this.getWildberriesReviewsUrl(productUrl);
                return await this.parseWildberriesReviews(reviewsUrl);
            } else if (marketplace === 'ozon') {
                return await this.parseOzonReviews(productUrl);
            }
            
            return [];
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤:', error);
            return [];
        }
    }
}

module.exports = ReviewsService;
